import { EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { I18nInterface } from './i18n';
export declare class ImageDrawingComponent implements OnInit, OnChanges {
    src?: string;
    width?: number;
    height?: number;
    forceSizeCanvas: boolean;
    forceSizeExport: boolean;
    enableRemoveImage: boolean;
    enableLoadAnotherImage: boolean;
    enableTooltip: boolean;
    showCancelButton: boolean;
    i18nUser: I18nInterface;
    locale: string;
    saveBtnText: string;
    cancelBtnText: string;
    loadingText: string;
    errorText: string;
    loadingTemplate?: TemplateRef<any>;
    errorTemplate?: TemplateRef<any>;
    outputMimeType: string;
    outputQuality: number;
    borderCss: string;
    drawingSizes: {
        [name: string]: number;
    };
    colors: {
        [name: string]: string;
    };
    save: EventEmitter<Blob>;
    cancel: EventEmitter<void>;
    currentTool: string;
    currentSize: string;
    currentColor: string;
    i18n: I18nInterface;
    canUndo: boolean;
    canRedo: boolean;
    isLoading: boolean;
    hasError: boolean;
    errorMessage: string;
    private canvas;
    private stack;
    colorsName: string[];
    drawingSizesName: string[];
    private imageUsed?;
    constructor();
    ngOnInit(): void;
    selectTool(tool: string): void;
    selectDrawingSize(size: string): void;
    selectColor(color: string): void;
    undo(): void;
    redo(): void;
    clearCanvas(): void;
    saveImage(): void;
    cancelAction(): void;
    getTextTranslated(name: string): string;
    getTooltipTranslated(name: string): string;
    private setUndoRedo;
    importPhotoFromFile(event: Event | any): void;
    removeImage(): void;
    readonly hasImage: boolean;
    private importPhotoFromSrc;
    private importPhotoFromBlob;
    importPhotoFromUrl(): void;
    ngOnChanges(changes: SimpleChanges): void;
}
